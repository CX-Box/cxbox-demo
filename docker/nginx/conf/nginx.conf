worker_processes auto;
error_log /dev/stdout info;
events {
    worker_connections 8000;
    multi_accept on;
}
http {
  access_log /dev/stdout;
  proxy_read_timeout 1680;
  proxy_connect_timeout 1680;
  proxy_send_timeout 1680;
  client_max_body_size 1000M;
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  log_format compression '$remote_addr - $remote_user [$time_local] '
      '"$request" $status $upstream_addr '
      '"$http_referer" "$http_user_agent"';
  map $http_upgrade $connection_upgrade {
           default upgrade;
          '' close;
  }

  #here nginx will paste file from /templates/*.conf.template (${} variables will be alreadey replaced with environment variables on nginx container start)
  include /etc/nginx/conf.d/upstreams.conf;

  server {
    include       /etc/nginx/mime.types;
    listen 80;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-XSS-Protection: "1; mode=block";
    access_log /var/log/nginx/access.log compression;
    root /srv/app-name;
    index index.html index.htm;

    location / {
      proxy_set_header X-Forwarded-For $proxy_protocol_addr;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $host;
      proxy_set_header Cookie $http_cookie;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_pass http://app;
    }

    location /auth {
       proxy_set_header X-Forwarded-For $proxy_protocol_addr;
       proxy_set_header X-Forwarded-Proto $scheme;
       proxy_set_header Host $host;
       proxy_set_header Cookie $http_cookie;
       proxy_set_header X-Forwarded-Host $server_name;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_pass http://keycloak;
    }
  }
}